<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>升级hexo 版本的坑</title>
    <link href="/2023/02/01/post7/"/>
    <url>/2023/02/01/post7/</url>
    
    <content type="html"><![CDATA[<p>在github 的pr 上面把升级的依赖都merge了，然后发现新发表的文章不展示，以为是自动化部署出来问题，检查了好几遍没问题，因为在升级之前hexo s 是可以预览的 升级之后就报错不行了，就将依赖的版本回退，一个个升级对照<br>升级之前的文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo-site&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;private&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;build&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo generate&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;clean&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo clean&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;deploy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo deploy&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;server&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo server&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;hexo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.4.2&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;hexo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^5.4.2&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-asset-image&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;github:CodeFalling/hexo-asset-image&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-deployer-git&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-generator-archive&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-generator-category&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-generator-index&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-generator-tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-helper-live2d&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.1.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-renderer-ejs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-renderer-marked&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.1.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-renderer-stylus&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-server&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-theme-fluid&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.9.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-theme-landscape&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.0.3&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>升级之后的文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo-site&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;private&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;build&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo generate&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;clean&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo clean&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;deploy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo deploy&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;server&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo server&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;hexo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.4.2&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;hexo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^6.3.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-asset-image&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;github:CodeFalling/hexo-asset-image&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-deployer-git&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-generator-archive&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-generator-category&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-generator-index&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-generator-tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-helper-live2d&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.1.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-renderer-ejs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-renderer-marked&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^6.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-renderer-stylus&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-server&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-theme-fluid&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.9.4&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-theme-landscape&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.0.3&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br>修改回去本地是可以预览了仓库也是有代码了，但是远程还是没展示出来，后来发现因为之前修改了分支的名称还是读取原来的分支修改了就好了<br>在Settings-&gt;General-&gt;Pages Branch 修改成现在的分支即可，有空再看看升级之后本地为什么安装依赖失败的原因<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>碎碎念</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo&amp;Github Action持续部署</title>
    <link href="/2023/02/01/hexo%20+%20github%20action/"/>
    <url>/2023/02/01/hexo%20+%20github%20action/</url>
    
    <content type="html"><![CDATA[<h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>之前一直是用的是mac和windows 两个设备，有时候想写文章发布也不是很方便，于是就想弄个自动部署,除此之外还等输入hexo new，hexo s，hexo g，hexo d等繁琐命令</p><h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><ul><li>在你博客本地目录下的source文件夹内的_posts文件夹下尽情书写博客吧</li><li>写完博客通过关联远程Hexo私有源码库进行push，github action检测到分支变动会进行重新编译并重新部署public下博客内容到你的公有库</li><li>当你换一台机器进行博客书写，只需要关联远程源码库进行pull下，就可以马上进行内容书写了<h3 id="准备仓库"><a href="#准备仓库" class="headerlink" title="准备仓库"></a>准备仓库</h3>私有仓库： blog<br>这里是存放 Hexo 博客源码的</li></ul><p>公有仓库： 用户名.github.io<br>这里是用来 public 静态页面的，最好是空的，当然是你现在的hexo博客也可以。</p><h3 id="获取-GitHub-令牌"><a href="#获取-GitHub-令牌" class="headerlink" title="获取 GitHub 令牌"></a>获取 GitHub 令牌</h3><p>登录你的 GitHub 账号，点击右上角的头像，点击「Settings」进入设置。<br><img src="/2023/02/01/hexo%20+%20github%20action/img.png" alt="img.png"><br>点击菜单栏中的「Developer settings」进入开发者设置。<br><img src="/2023/02/01/hexo%20+%20github%20action/img2.png" alt="img.png"><br>点击菜单栏中的「Personal access tokens」进入令牌设置。<br><img src="/2023/02/01/hexo%20+%20github%20action/img3.png" alt="img.png"><br>点击「Generate new token」新建一个令牌。<br><img src="/2023/02/01/hexo%20+%20github%20action/img4.png" alt="img.png"><br>勾选全部的权限，名称随意。<br>并点击「Generate token」完成生成。<br><img src="/2023/02/01/hexo%20+%20github%20action/img5.png" alt="img.png"><br>记得保存好这个令牌，它不会再次出现。只能重新生成个新的。</p><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p>使用 GitHub 新建一个存放 Hexo 文件的仓库，要选<strong>私有仓库</strong>！<br>不要勾选任何的初始化仓库选项！<br>在 Hexo 根目录中删除 .git 文件夹(隐藏文件夹)，删除主题目录下的 .git 文件夹。<br>然后在 Hexo 根目录下使用 cmd 或终端运行以下命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmd">git init # 新建 Git 仓库<br>git add -A  # 暂存所有文件<br>git commit -m &quot;Create&quot; # 提交更新<br>git remote add origin https://github.com/用户名/新建的私有仓库名.git # 新增远程链接<br>git push -u origin master # 推送至远程仓库<br></code></pre></td></tr></table></figure><h3 id="新建action-脚本"><a href="#新建action-脚本" class="headerlink" title="新建action 脚本"></a>新建action 脚本</h3><p>3、附上我的yml脚本</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-comment"># 部署</span><br> <br><span class="hljs-attr">on:</span> <span class="hljs-comment"># 触发条件</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">main</span> <span class="hljs-comment"># 推送到 main 分支</span><br> <br>  <span class="hljs-attr">release:</span><br>    <span class="hljs-attr">types:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">published</span> <span class="hljs-comment"># 推送新版本号</span><br> <br>  <span class="hljs-attr">workflow_dispatch:</span> <span class="hljs-comment"># 手动触发</span><br> <br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br> <br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-comment"># Checkout 仓库</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">ref:</span> <span class="hljs-string">main</span><br> <br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span> <span class="hljs-comment"># 安装 Node.js</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;12.x&quot;</span><br> <br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Hexo</span> <span class="hljs-comment"># 安装 Hexo</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install hexo-cli -g</span><br><span class="hljs-string"></span>        <br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Cache</span> <span class="hljs-string">Modules</span> <span class="hljs-comment"># 缓存 Node 插件</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v1</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">cache-modules</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">node_modules</span><br>        <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span><br> <br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Dependencies</span> <span class="hljs-comment"># 如果没有缓存或 插件有更新，则安装插件</span><br>      <span class="hljs-attr">if:</span> <span class="hljs-string">steps.cache-modules.outputs.cache-hit</span> <span class="hljs-type">!=</span> <span class="hljs-string">&#x27;true&#x27;</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span> <span class="hljs-comment"># 如果仓库里没有 package-lock.json，上传一下，npm ci 必须要有 package-lock.json</span><br>        <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">url.&quot;https://&quot;.insteadOf</span> <span class="hljs-string">ssh://git@</span><br>        <span class="hljs-string">npm</span> <span class="hljs-string">ci</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-comment"># 生成</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean</span><br><span class="hljs-string">        hexo generate</span><br><span class="hljs-string"></span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-comment"># 部署</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        git config --global user.name &quot;用户名&quot;</span><br><span class="hljs-string">        git config --global user.email &quot;邮箱&quot;</span><br><span class="hljs-string">        git config --global init.defaultBranch main</span><br><span class="hljs-string">        export TZ=&#x27;Asia/Shanghai&#x27;</span><br><span class="hljs-string">        cd public/</span><br><span class="hljs-string">        git init</span><br><span class="hljs-string">        git add -A</span><br><span class="hljs-string">        git commit -m &quot;Create by workflows&quot;</span><br><span class="hljs-string">        git remote add origin https://【token】@github.com/【用户名】/【仓库名】</span><br><span class="hljs-string">        git push origin main -f</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>参考网址：<br><a href="https://anzhiy.cn/posts/asdx.html">https://anzhiy.cn/posts/asdx.html</a><br><a href="https://zsyyblog.com/8598dd5c.html">https://zsyyblog.com/8598dd5c.html</a></p>]]></content>
    
    
    <categories>
      
      <category>路漫漫其修远兮</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Github Action</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一台电脑同时使用码云(Gitee)和Github</title>
    <link href="/2022/07/19/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E7%A0%81%E4%BA%91-Gitee-%E5%92%8CGithub/"/>
    <url>/2022/07/19/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E7%A0%81%E4%BA%91-Gitee-%E5%92%8CGithub/</url>
    
    <content type="html"><![CDATA[<p>最近发现有些代码在码云上有Github上没有仓库，那么就需要同时有权限去Github和Gitee去拉去代码</p><p>既然要同时配置Gitee 和 Github ，所以以下这些步骤自然是要执行两遍的。一般来说，在 Gitee 上和在 Github 上使用的账号邮箱应该是不一样的，所以配置的时候要特别注意一下。</p><h5 id="创建-ssh-key"><a href="#创建-ssh-key" class="headerlink" title="创建 ssh key"></a>创建 ssh key</h5><p>进入用户目录下的 .ssh 文件夹下，路径会因你使用的操作系统不同而略有差异</p><h5 id="没有这个文件夹也无所谓，直接运行下一句命令也可以"><a href="#没有这个文件夹也无所谓，直接运行下一句命令也可以" class="headerlink" title="没有这个文件夹也无所谓，直接运行下一句命令也可以"></a>没有这个文件夹也无所谓，直接运行下一句命令也可以</h5><p>cd ~/.ssh</p><h5 id="生成-key，将邮件地址替换为你-Gitee-或者-Github-使用的邮件地址"><a href="#生成-key，将邮件地址替换为你-Gitee-或者-Github-使用的邮件地址" class="headerlink" title="生成 key，将邮件地址替换为你 Gitee 或者 Github 使用的邮件地址"></a>生成 key，将邮件地址替换为你 Gitee 或者 Github 使用的邮件地址</h5><p>ssh-keygen -t rsa -C “<a href="mailto:&#x78;&#x78;&#x78;&#x40;&#120;&#x78;&#120;&#46;&#x63;&#x6f;&#109;">&#x78;&#x78;&#x78;&#x40;&#120;&#x78;&#120;&#46;&#x63;&#x6f;&#109;</a>“</p><h5 id="接下来应该会看到下面的提示："><a href="#接下来应该会看到下面的提示：" class="headerlink" title="接下来应该会看到下面的提示："></a>接下来应该会看到下面的提示：</h5><p>Generating public/private rsa key pair.<br>Enter file in which to save the key (/c/Users/your_user_name/.ssh/id_rsa): id_rsa_gitee<br>这一步如果默认回车，会生成名为 id_rsa 的文件，你可以输入不同的名字来便于识别文件，比如生成 Gitee 的 ssh key 可以设置为 id_rsa_gitee，设置 Github 的 ssh key 可以设置为 id_rsa_github ，我这里设置为 id_rsa_gitee。</p><h5 id="接下来的会看到："><a href="#接下来的会看到：" class="headerlink" title="接下来的会看到："></a>接下来的会看到：</h5><p>Enter passphrase (empty for no passphrase):<br>直接回车，然后会看到：</p><p>Enter same passphrase again:<br>继续回车就行了。生成完毕：</p><p>Your identification has been saved in id_rsa_gitee.<br>Your public key has been saved in id_rsa_gitee.pub.<br>The key fingerprint is:<br>SHA256:F0K/ojCbFzgMPru11m4g/9uV03oHK+U0rKBLwOOye2c <a href="mailto:&#x78;&#120;&#120;&#x40;&#x78;&#x78;&#120;&#46;&#99;&#111;&#x6d;">&#x78;&#120;&#120;&#x40;&#x78;&#x78;&#120;&#46;&#99;&#111;&#x6d;</a><br>The key’s randomart image is:<br>+—[RSA 2048]—-+<br>|        .        |<br>|       . .       |<br>|  .     . o      |<br>| . + .   . o     |<br>|  o X . S o.     |<br>|  .+.O o.o o*    |<br>|  oo=o+. .+=.+   |<br>|   =++E. .oo+ .  |<br>|  ++.*=o. .o .   |<br>+—-[SHA256]—–+<br>在 Gitee 和 Github 添加 public key<br>找到用户目录下的 .ssh 文件夹，查看并复制创建好的 id_rsa_gitee.pub 或 id_rsa_github.pub 的内容。</p><p>cd ~/.ssh</p><h5 id="查看-id-rsa-gitee-pub-文件内容"><a href="#查看-id-rsa-gitee-pub-文件内容" class="headerlink" title="查看 id_rsa_gitee.pub 文件内容"></a>查看 id_rsa_gitee.pub 文件内容</h5><p>cat id_rsa_gitee.pub</p><h5 id="会显示这样一串东西，复制它："><a href="#会显示这样一串东西，复制它：" class="headerlink" title="会显示这样一串东西，复制它："></a>会显示这样一串东西，复制它：</h5><p>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDZbvgUEj3XAXH4HkW27ibdXgV6VHdrA9/WdSDHtiiC55mjPvxj3OtPxIbpeJmhWyHiJWR6<br>uUuK+gkb//O51uWCPhHqxKR7+45tZ9jHqXW+hEKPp+odQgc+3hiHAjTkn3JGeIJlQp2UdJCDHBrp+kcgVeg91+y7cU3ufaUQ/hpD<br>rCgn6uvwjwJgnDhV9DYi+gFUFe7LUwa1o4nfwg43ycuOOuT7c6VO2dj/0pLRUVTPQYu/C3kaaPVedir7mKIu/dM6Ec44bhYTp1Dq<br>qp8BO42Cfo+n+dempqYTe2wcPvuDjSj884IATc/KvBfc86Yd2Uj7NI7li90Y3i6adoxUIWQh <a href="mailto:&#120;&#x78;&#x78;&#x40;&#120;&#x78;&#120;&#x2e;&#x63;&#111;&#109;">&#120;&#x78;&#x78;&#x40;&#120;&#x78;&#120;&#x2e;&#x63;&#111;&#109;</a><br>打开 Gitee 和 Github 的网站找到设置，再找到 SSH Keys，添加复制的 public key 。</p><p>下面是重点！！！</p><p>在 .ssh 文件夹中创建 config 文件，添加以下内容以区分两个 ssh key：</p><h5 id="gitee"><a href="#gitee" class="headerlink" title="gitee"></a>gitee</h5><p>Host gitee.com<br>HostName gitee.com<br>PreferredAuthentications publickey<br>IdentityFile ~/.ssh/id_rsa_gitee</p><h5 id="github"><a href="#github" class="headerlink" title="github"></a>github</h5><p>Host github.com<br>HostName github.com<br>PreferredAuthentications publickey<br>IdentityFile ~/.ssh/id_rsa_github</p>]]></content>
    
    
    <categories>
      
      <category>路漫漫其修远兮</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Gitee</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jemeter学习记录</title>
    <link href="/2022/06/01/Jemeter/"/>
    <url>/2022/06/01/Jemeter/</url>
    
    <content type="html"><![CDATA[<h3 id="接口分类"><a href="#接口分类" class="headerlink" title="接口分类"></a>接口分类</h3><ul><li>内部：开发的接口给内部系统使用</li><li>外部：<ul><li>被测项目调用外部接口（正例）</li><li>被测项目提供接口给外部使用（正例，返例，鉴权，兼容）<h3 id="接口的设计风格分类"><a href="#接口的设计风格分类" class="headerlink" title="接口的设计风格分类"></a>接口的设计风格分类</h3></li></ul></li></ul><ul><li><p>1、Soap<br>基于webservice协议，<a href="https://xxx/?wsdl">https://xxx?wsdl</a></p></li><li><p>2、RPC<br>基于dubbo（thrift）协议的接口，dubbo:xx//xx</p></li><li><p>3、RestFul<br>基于http协议，<a href="http://xx/xx">http://xx/xx</a><br>http协议是一种超文本传输协议，是客户端与服务器交互数据。</p><p>分为请求和响应两个部分。<br>请求：请求行（请求方式和请求路径），请求头，请求报文</p><p>  请求方式：get，post，put，delete<br>请求路径：url<br>请求头：<br>Accept: text/html,image/*<br>浏览器可以接收的类型<br>Accept-Charset: ISO-8859-1<br>浏览器可以接收的编码类型<br>Accept-Encoding: gzip,compress<br>浏览器可以接收压缩编码类型<br>Accept-Language: en-us,zh-cn<br>浏览器可以接收的语言和国家类型<br>Host: <a href="http://www.lks.cn/">www.lks.cn:80</a><br>浏览器请求的主机和端口<br>Referer: <a href="http://www.lks.cn/index.html">http://www.lks.cn/index.html</a><br>请求来自于哪个页面<br>User-Agent: Mozilla/4.0 compatible; MSIE 5.5; Windows NT 5.0<br>浏览器相关信息<br>If-Modified-Since: Tue, 11 Jul 2000 18:23:51 GMT<br>某个页面缓存时间<br>Cookie：<br>浏览器暂存服务器发送的信息<br>Connection: close1.0/Keep-Alive1.1<br>HTTP请求的版本的特点<br>Date: Tue, 11 Jul 2000 18:23:51GMT<br>请求网站的时间<br>Allow:GET<br>请求的方法 GET 常见的还有POST<br>Keep-Alive5<br>连接的时间；5<br>Connection：keep-alive<br>是否是长连接<br>Cache-Control：max-age=300<br>缓存的最长时间 300</p></li></ul><p>响应：响应行(响应码和响应信息)，响应头，响应报文</p><p>接口测试工具<br>jmeter+ant+git+jenkins<br>postman+newman+git+jenkins</p><p>函数助手对话框<br>1、测试计划：jemeter的起点和容器<br>2、线程组：代表一定的虚拟用户<br>3、取样器：发送请求的最小单元<br>4、逻辑控制器：控制组件的执行顺序<br>5、前置处理器：在请求之前的操作<br>6、后置处理器：在请求之后的操作<br>7、断言：判断请求是否成功<br>8、定时器：是否延时或间隔发送请求<br>9、配置元件：请求期的配置信息<br>10、监听器：负责收集测试结果</p><p>执行顺序：<br>测试计划》线程组》配置元件》前置处理器》定时器》取样器》后置处理器》断言》监听器</p><p>定时器（<br>固定 ：每xx秒发送一次<br>同步 ：并发<br>高斯 ：随机，模拟真实请求<br>）</p><p>作用域：<br>组件回作用域它的父级组件，同级组件以及同级组件的子组件<br><img src="/2022/06/01/Jemeter/2022-06-01-18-22-17.png"></p><h3 id="接口测试流程："><a href="#接口测试流程：" class="headerlink" title="接口测试流程："></a>接口测试流程：</h3><p>1、拿到接口文档（抓包，录制），熟悉接口业务，接口地址，鉴权方式，入参，出参，错误码，兼容</p><p>2、接口测试用例的设计评审<br>正例：<br>反例：</p><ul><li>1、鉴权反例（必填，错误，鉴权码过期）</li><li>2、参数反例（必填，参数类型异常，参数长度异常）</li><li>3、其他场景（黑名单，调用次数限制，分页场景）</li><li>4、兼容性（一个接口对应多个版本App）</li></ul><p>3、执行接口测试</p><p>4、团队协作，持续集成并伸出报告发送邮件  </p><h3 id="Jemeter-接口测试"><a href="#Jemeter-接口测试" class="headerlink" title="Jemeter 接口测试"></a>Jemeter 接口测试</h3><h4 id="添加组件"><a href="#添加组件" class="headerlink" title="添加组件"></a>添加组件</h4><p>1、HTTP Cookie 管理器：</p><p>2、HTTP请求默认值<br><img src="/2022/06/01/Jemeter/2022-06-01-18-41-41.png"></p><p>3、用户定义的变量</p><h4 id="增加取样器"><a href="#增加取样器" class="headerlink" title="增加取样器"></a>增加取样器</h4><p>web服务器参数：会覆盖组件中的默认值，可以不写<br><img src="/2022/06/01/Jemeter/2022-06-01-18-46-08.png"><br>自动重定向：假设响应是301/301只会获取最终的结果<br>跟踪重定向：假设响应是301/301会把整个过程的记录</p><h4 id="察看结果树"><a href="#察看结果树" class="headerlink" title="察看结果树"></a>察看结果树</h4><p>乱码：组件中增加编码格式utf-8或者设置全局配置文件中的编码格式utf-8</p><h3 id="jemeter接口关联"><a href="#jemeter接口关联" class="headerlink" title="jemeter接口关联"></a>jemeter接口关联</h3><p>1、正则表达式提取器<br>添加一个后置处理器选择正则表达式提取器。<br>左边界右边界中间替换成（.*？）<br>$1$ 表示第一个正则表达式多个就写多个<br>匹配数字0随机-1所以x是第x个<br>2、jsonpath提取器（精准）<br>添加一个后置处理器选择jsonpath提取器。<br>$根目录 .子节点key<br>$[“key”]</p><p>接口测试实战（业务闭环）<br>crud 创建了也删除了 数据库不产生测试数据<br>动态参数 tools 函数助手 random/<br>randomstring </p><p>批量删除 循环<br>获取所有id -1 循环控制器 放入删除接口 增加固定定时器</p><h3 id="Jemeter断言"><a href="#Jemeter断言" class="headerlink" title="Jemeter断言"></a>Jemeter断言</h3><p>1、响应断言</p><ul><li>状态断言<br><img src="/2022/06/01/Jemeter/2022-06-02-11-01-32.png"></li><li>业务断言<br>json数据需要选择响应文本<br>字符串是需要选择文本</li></ul><p>字符串、相等不支持正则<br>包含、匹配支持正则</p><p>2、json断言</p><p>3、beanshell断言</p><h3 id="Jemeter调试"><a href="#Jemeter调试" class="headerlink" title="Jemeter调试"></a>Jemeter调试</h3><p>1、调试取样器<br>2、jmeter + fiddler<br>高级里面 代理服务器 添加fiddler地址端口<br><img src="/2022/06/01/Jemeter/2022-06-02-11-28-11.png"></p><h3 id="Jemeter数据驱动"><a href="#Jemeter数据驱动" class="headerlink" title="Jemeter数据驱动"></a>Jemeter数据驱动</h3><p>添加一个元件，<br><img src="/2022/06/01/Jemeter/2022-06-02-11-46-29.png"><br><img src="/2022/06/01/Jemeter/2022-06-02-11-49-33.png"><br>如果多个数据，就需要循环三次<br><img src="/2022/06/01/Jemeter/2022-06-02-11-38-58.png">，这边没有值不能写“”需要这么写不然会报错<br><img src="/2022/06/01/Jemeter/2022-06-02-11-50-45.png"></p><h3 id="当没有接口文档时，如何使用Jmeter录制和创建脚本"><a href="#当没有接口文档时，如何使用Jmeter录制和创建脚本" class="headerlink" title="当没有接口文档时，如何使用Jmeter录制和创建脚本"></a>当没有接口文档时，如何使用Jmeter录制和创建脚本</h3><p>1、抓包</p><p>2、badboy</p><p>3、jemter自带的http代理服务器</p><ul><li>（1）新建线程组</li><li>（2）新建代理服务器：测试计划-&gt;非配置元件-&gt;代理服务器<ul><li>端口：8888</li><li>目标控制器：设置为你录制的目标线程组<br>type：默认httpclient 不行的话选 java</li></ul></li><li>（3）点击【启动按钮】，运行代理服务器</li><li>（4）客户端设置：让客户端请求通过代理服务器发送，dns 中配置jemeter的端口</li></ul>]]></content>
    
    
    <categories>
      
      <category>路漫漫其修远兮</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
      <tag>Jemeter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos8使用yum命令报错</title>
    <link href="/2022/06/01/centos-yum-%E5%91%BD%E4%BB%A4%E6%8A%A5%E9%94%99/"/>
    <url>/2022/06/01/centos-yum-%E5%91%BD%E4%BB%A4%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<p>今天想起来还有台服务器，于是准备安装一下docker,回顾一下之前学习的知识。</p><p>执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -sSL https://get.daocloud.io/docker | sh<br></code></pre></td></tr></table></figure><p>运行了结果报错：Failed to download metadata for repo ‘AppStream’: Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried<br>那么百度一下：</p><p>原因：2022年1月1日起CentOS官方将不再对CentOS 8提供服务支持,虽然系统可以正常使用,但CentOS 8的yum源已经移除无法使用了,使用yum安装会报错</p><p>按顺序执行一下命令即可解决：<br>1、执行如下命令先将之前的yum文件备份：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rename &#x27;.repo&#x27; &#x27;.repo.bak&#x27; /etc/yum.repos.d/*.repo<br></code></pre></td></tr></table></figure><p>2、运行以下命令下载最新的repo文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo -O /etc/yum.repos.d/Centos-vault-8.5.2111.repo<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://mirrors.aliyun.com/repo/epel-archive-8.repo -O /etc/yum.repos.d/epel-archive-8.repo<br></code></pre></td></tr></table></figure><p>3、运行以下命令替换repo文件中的链接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed -i &#x27;s/mirrors.cloud.aliyuncs.com/url_tmp/g&#x27;  /etc/yum.repos.d/Centos-vault-8.5.2111.repo &amp;&amp;  sed -i &#x27;s/mirrors.aliyun.com/mirrors.cloud.aliyuncs.com/g&#x27; /etc/yum.repos.d/Centos-vault-8.5.2111.repo &amp;&amp; sed -i &#x27;s/url_tmp/mirrors.aliyun.com/g&#x27; /etc/yum.repos.d/Centos-vault-8.5.2111.repo<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed -i &#x27;s/mirrors.aliyun.com/mirrors.cloud.aliyuncs.com/g&#x27; /etc/yum.repos.d/epel-archive-8.repo<br></code></pre></td></tr></table></figure><p>4、运行以下命令重新创建缓存,若没报错,则正常了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum clean all &amp;&amp; yum makecache<br></code></pre></td></tr></table></figure><p>结果又报错了<br>Errors during downloading metadata for repository ‘epel-archive’:</p><ul><li>Curl error (6): Couldn’t resolve host name for <a href="http://mirrors.cloud.aliyuncs.com/epel-archive/8/Everything/x86_64/repodata/repomd.xml">http://mirrors.cloud.aliyuncs.com/epel-archive/8/Everything/x86_64/repodata/repomd.xml</a> [Could not resolve host: mirrors.cloud.aliyuncs.com]<br>Error: Failed to download metadata for repo ‘epel-archive’: Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried<br>那再百度下：<br>因为所用系统为Centos 8版本，暂时（此时为2022-03-16）已停止更新相应依赖，</li></ul><p>于是按照下面操作，解决问题</p><p>1、备份源文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv /etc/yum.repos.d /etc/yum.repos.d.bak<br></code></pre></td></tr></table></figure><p>2、创建源文件目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /etc/yum.repos.d<br></code></pre></td></tr></table></figure><p>3、下载新的yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo &gt; /etc/yum.repos.d/Centos-vault-8.5.2111.repo<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl https://mirrors.aliyun.com/repo/epel-archive-8.repo &gt; /etc/yum.repos.d/epel-archive-8.repo<br></code></pre></td></tr></table></figure><p>4、重建缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum clean all &amp;&amp; yum makecache<br></code></pre></td></tr></table></figure><p>最后成功解决！！</p><p>参考网站：<br><a href="https://blog.csdn.net/burgerh/article/details/123098751">https://blog.csdn.net/burgerh/article/details/123098751</a></p><p><a href="https://blog.csdn.net/qq_39835505/article/details/124840390">https://blog.csdn.net/qq_39835505/article/details/124840390</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装brew时卡在Downloading Command Line Tools for Xcode</title>
    <link href="/2022/05/31/%E5%AE%89%E8%A3%85brew%E6%97%B6%E5%8D%A1%E5%9C%A8Downloading-Command-Line-Tools-for-Xcode/"/>
    <url>/2022/05/31/%E5%AE%89%E8%A3%85brew%E6%97%B6%E5%8D%A1%E5%9C%A8Downloading-Command-Line-Tools-for-Xcode/</url>
    
    <content type="html"><![CDATA[<p>Press RETURN/ENTER to continue or any other key to abort:<br>==&gt; /usr/bin/sudo /usr/sbin/chown -R kingsley:admin /usr/local/Homebrew<br>==&gt; Searching online for the Command Line Tools<br>==&gt; /usr/bin/sudo /usr/bin/touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress</p><p>卡在这一步骤时，可以去<a href="https://developer.apple.com/download/more/%E4%B8%8A%E7%99%BB%E9%99%86%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AF%B9%E5%BA%94%E7%89%88%E6%9C%AC%EF%BC%88Xcode-11.4.1%EF%BC%89%E7%9A%84Command">https://developer.apple.com/download/more/上登陆，下载对应版本（Xcode-11.4.1）的Command</a> Line Tools ，然后手动安装。</p>]]></content>
    
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mac相关软件配置</title>
    <link href="/2022/05/31/mac%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/05/31/mac%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>每次使用新的mac电脑，都需要安装和配置一大堆东西，那就都记录在这里吧，方便查看。</p><h3 id="U盘启动盘制作"><a href="#U盘启动盘制作" class="headerlink" title="U盘启动盘制作"></a>U盘启动盘制作</h3><p>电脑升级了最新的系统之后感觉有点卡，于是打算降级到Catalina。<br>官方是不支持降级的，那只能刷机了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo /Volumes/Install\ macOS\ Catalina/Install\ macOS\ Catalina.app/Contents/Resources/createinstallmedia --volume /Volumes/macos<br></code></pre></td></tr></table></figure><h3 id="iterm2"><a href="#iterm2" class="headerlink" title="iterm2"></a>iterm2</h3><p>iTerm2 的安装，直接在官网下载安装。</p><p>官网地址： <a href="http://iterm2.com/downloads.html">http://iterm2.com/downloads.html</a><br>其实自带终端也挺好的，用iterm2的原因是：<br>最初看见了这个视频<br><a href="https://www.bilibili.com/video/BV1cf4y157sv?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1cf4y157sv?spm_id_from=333.337.search-card.all.click</a></p><h3 id="配置-vim高亮显示"><a href="#配置-vim高亮显示" class="headerlink" title="配置 vim高亮显示"></a>配置 vim高亮显示</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> ~/.vimrc<br>//增加一行  <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span><br></code></pre></td></tr></table></figure><h3 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h3><ul><li>linux alias 是命令的一种别称，输入<br>alias<br>可以看到像下面这样的结果：<br>alias vi=”vim”<br>也即，输入vi后，被自动定向到vim这个命令了。alias的作用就是，可以简写命令。</li><li>一些插件<ul><li>zsh-syntax-highlighting shell 命令可以高亮显示，便捷的知道你输入的命令是否正确。</li><li>zsh-autosuggestions 命令行自动补全插件</li></ul></li></ul><h3 id="brew"><a href="#brew" class="headerlink" title="brew"></a>brew</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;<br></code></pre></td></tr></table></figure><h4 id="替换brew-git"><a href="#替换brew-git" class="headerlink" title="替换brew.git"></a>替换brew.git</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd &quot;$(brew --repo)&quot;<br>git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git<br></code></pre></td></tr></table></figure><h4 id="替换homebrew-core-git"><a href="#替换homebrew-core-git" class="headerlink" title="替换homebrew-core.git"></a>替换homebrew-core.git</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;<br>git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git<br></code></pre></td></tr></table></figure><h4 id="刷新源"><a href="#刷新源" class="headerlink" title="刷新源"></a>刷新源</h4><p>brew update</p><h4 id="查看源"><a href="#查看源" class="headerlink" title="查看源"></a>查看源</h4><p>brew config</p><h3 id="GitHub-添加-SSHkey"><a href="#GitHub-添加-SSHkey" class="headerlink" title="GitHub 添加 SSHkey"></a>GitHub 添加 SSHkey</h3><p>git config –global user.name “用户名”<br>git config –global user.email “邮箱”<br>ssh-keygen -t rsa -C “邮箱”<br>cat /Users/xxxx/.ssh/id_rsa.pub<br>添加到github<br>详情可以参考<a href="https://www.jianshu.com/p/1bb662f8b8d3">https://www.jianshu.com/p/1bb662f8b8d3</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Navicat查看密码方案</title>
    <link href="/2022/05/23/post6/"/>
    <url>/2022/05/23/post6/</url>
    
    <content type="html"><![CDATA[<p>有时候会忘记数据库的密码，但是Navicat有保存着，那么怎么拿到呢？<br>1.导出连接<br><img src="/2022/05/23/post6/2022-05-23-21-32-55.png"><br>2、选择需要导出的连接<br><img src="/2022/05/23/post6/2022-05-23-21-33-19.png"><br>3、拿到保存到本地的connections.ncx文件中的Password<br>4、登陆在先php运行环境<a href="https://tool.lu/coderunner">https://tool.lu/coderunner</a><br>粘贴下方的代码到在线php运行环境，使用文件的Password替换代码中的“复制出来的密码”</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NavicatPassword</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$version</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$aesKey</span> = <span class="hljs-string">&#x27;libcckeylibcckey&#x27;</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$aesIv</span> = <span class="hljs-string">&#x27;libcciv libcciv &#x27;</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$blowString</span> = <span class="hljs-string">&#x27;3DC5CA39&#x27;</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$blowKey</span> = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$blowIv</span> = <span class="hljs-literal">null</span>;<br>     <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$version</span> = <span class="hljs-number">12</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;version = <span class="hljs-variable">$version</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;blowKey = <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-string">&#x27;3DC5CA39&#x27;</span>, <span class="hljs-literal">true</span>);<br>        <span class="hljs-variable language_">$this</span>-&gt;blowIv = <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-string">&#x27;d9c7c3c8870d64bd&#x27;</span>);<br>    &#125;<br>     <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encrypt</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$result</span> = <span class="hljs-literal">FALSE</span>;<br>        <span class="hljs-keyword">switch</span> (<span class="hljs-variable language_">$this</span>-&gt;version) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">11</span>:<br>                <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">encryptEleven</span>(<span class="hljs-variable">$string</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:<br>                <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">encryptTwelve</span>(<span class="hljs-variable">$string</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>         <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$result</span>;<br>    &#125;<br>     <br>    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encryptEleven</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$round</span> = <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">floor</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$string</span>) / <span class="hljs-number">8</span>));<br>        <span class="hljs-variable">$leftLength</span> = <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$string</span>) % <span class="hljs-number">8</span>;<br>        <span class="hljs-variable">$result</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-variable">$currentVector</span> = <span class="hljs-variable language_">$this</span>-&gt;blowIv;<br>         <br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$round</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$temp</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">encryptBlock</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-title function_ invoke__">xorBytes</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$string</span>, <span class="hljs-number">8</span> * <span class="hljs-variable">$i</span>, <span class="hljs-number">8</span>), <span class="hljs-variable">$currentVector</span>));<br>            <span class="hljs-variable">$currentVector</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">xorBytes</span>(<span class="hljs-variable">$currentVector</span>, <span class="hljs-variable">$temp</span>);<br>            <span class="hljs-variable">$result</span> .= <span class="hljs-variable">$temp</span>;<br>        &#125;<br>         <br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$leftLength</span>) &#123;<br>            <span class="hljs-variable">$currentVector</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">encryptBlock</span>(<span class="hljs-variable">$currentVector</span>);<br>            <span class="hljs-variable">$result</span> .= <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">xorBytes</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$string</span>, <span class="hljs-number">8</span> * <span class="hljs-variable">$i</span>, <span class="hljs-variable">$leftLength</span>), <span class="hljs-variable">$currentVector</span>);<br>        &#125;<br>         <br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">strtoupper</span>(<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$result</span>));<br>    &#125;<br>     <br>    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encryptBlock</span>(<span class="hljs-params"><span class="hljs-variable">$block</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">openssl_encrypt</span>(<span class="hljs-variable">$block</span>, <span class="hljs-string">&#x27;BF-ECB&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING);<br>    &#125;<br>     <br>    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decryptBlock</span>(<span class="hljs-params"><span class="hljs-variable">$block</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">openssl_decrypt</span>(<span class="hljs-variable">$block</span>, <span class="hljs-string">&#x27;BF-ECB&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING);<br>    &#125;<br>     <br>    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">xorBytes</span>(<span class="hljs-params"><span class="hljs-variable">$str1</span>, <span class="hljs-variable">$str2</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$result</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$str1</span>); <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$result</span> .= <span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$str1</span>[<span class="hljs-variable">$i</span>]) ^ <span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$str2</span>[<span class="hljs-variable">$i</span>]));<br>        &#125;<br>         <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$result</span>;<br>    &#125;<br>     <br>    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encryptTwelve</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">openssl_encrypt</span>(<span class="hljs-variable">$string</span>, <span class="hljs-string">&#x27;AES-128-CBC&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;aesKey, OPENSSL_RAW_DATA, <span class="hljs-variable">$this</span>-&gt;aesIv);<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">strtoupper</span>(<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$result</span>));<br>    &#125;<br>     <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decrypt</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$result</span> = <span class="hljs-literal">FALSE</span>;<br>        <span class="hljs-keyword">switch</span> (<span class="hljs-variable language_">$this</span>-&gt;version) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">11</span>:<br>                <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">decryptEleven</span>(<span class="hljs-variable">$string</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:<br>                <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">decryptTwelve</span>(<span class="hljs-variable">$string</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>         <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$result</span>;<br>    &#125;<br>     <br>    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decryptEleven</span>(<span class="hljs-params"><span class="hljs-variable">$upperString</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$string</span> = <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$upperString</span>));<br>         <br>        <span class="hljs-variable">$round</span> = <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">floor</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$string</span>) / <span class="hljs-number">8</span>));<br>        <span class="hljs-variable">$leftLength</span> = <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$string</span>) % <span class="hljs-number">8</span>;<br>        <span class="hljs-variable">$result</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-variable">$currentVector</span> = <span class="hljs-variable language_">$this</span>-&gt;blowIv;<br>         <br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$round</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$encryptedBlock</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$string</span>, <span class="hljs-number">8</span> * <span class="hljs-variable">$i</span>, <span class="hljs-number">8</span>);<br>            <span class="hljs-variable">$temp</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">xorBytes</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-title function_ invoke__">decryptBlock</span>(<span class="hljs-variable">$encryptedBlock</span>), <span class="hljs-variable">$currentVector</span>);<br>            <span class="hljs-variable">$currentVector</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">xorBytes</span>(<span class="hljs-variable">$currentVector</span>, <span class="hljs-variable">$encryptedBlock</span>);<br>            <span class="hljs-variable">$result</span> .= <span class="hljs-variable">$temp</span>;<br>        &#125;<br>         <br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$leftLength</span>) &#123;<br>            <span class="hljs-variable">$currentVector</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">encryptBlock</span>(<span class="hljs-variable">$currentVector</span>);<br>            <span class="hljs-variable">$result</span> .= <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">xorBytes</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$string</span>, <span class="hljs-number">8</span> * <span class="hljs-variable">$i</span>, <span class="hljs-variable">$leftLength</span>), <span class="hljs-variable">$currentVector</span>);<br>        &#125;<br>         <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$result</span>;<br>    &#125;<br>     <br>    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decryptTwelve</span>(<span class="hljs-params"><span class="hljs-variable">$upperString</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$string</span> = <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$upperString</span>));<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">openssl_decrypt</span>(<span class="hljs-variable">$string</span>, <span class="hljs-string">&#x27;AES-128-CBC&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;aesKey, OPENSSL_RAW_DATA, <span class="hljs-variable">$this</span>-&gt;aesIv);<br>    &#125;<br>&#125;;<br> <br> <br><span class="hljs-comment">//需要指定版本两种，11或12</span><br><span class="hljs-comment">//$navicatPassword = new NavicatPassword(11);</span><br><span class="hljs-comment">//这里我指定的12的版本，原先指定的11，执行之后的密码是乱码</span><br><span class="hljs-variable">$navicatPassword</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NavicatPassword</span>(<span class="hljs-number">12</span>);<br> <br><span class="hljs-comment">//解密</span><br><span class="hljs-comment">//$decode = $navicatPassword-&gt;decrypt(&#x27;15057D7BA390&#x27;);</span><br><span class="hljs-variable">$decode</span> = <span class="hljs-variable">$navicatPassword</span>-&gt;<span class="hljs-title function_ invoke__">decrypt</span>(<span class="hljs-string">&#x27;复制出来的密码&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$decode</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/05/23/post6/2022-05-23-21-33-45.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>navicat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac设置同时访问内外网</title>
    <link href="/2021/02/07/post5/"/>
    <url>/2021/02/07/post5/</url>
    
    <content type="html"><![CDATA[<p>在银行工作过程中，有时候我们需要使用网线连接电脑，连内网登录虚拟机访问虚拟桌面，外网用于日常使用。所以一般会将wifi设置成外网并优先访问，以太网设置为内网。但是当我第一次添加内网时，ping成功了，但是只能讲外网关掉才能访问，不能同时访问，此时我们需要要清除所有网络配置，重新设置一下就好。<br>具体操作：<br>1.打开终端<br>2.输入以下指令<br>netstat -rn –查看路由表<br>route get 0.0.0.0 –获取默认路由<br>sudo route delete 0.0.0.0 –删除默认路由<br>sudo route add -net 0.0.0.0 x.x.x.x –添加外网网关<br>sudo route add -net y.y.y.y x.x.x.x –添加内网网关（注意这里ip地址是自己要访问内网的ip地址，如果只访问某一台，可以将y.y.y.y改成固定的IP）<br>3.去网络设置里面设置服务顺序，这里设置外网wifi优先（选中拖动即可）</p>]]></content>
    
    
    <categories>
      
      <category>路漫漫其修远兮</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DevUtils.app Xcode编译</title>
    <link href="/2021/01/30/post4/"/>
    <url>/2021/01/30/post4/</url>
    
    <content type="html"><![CDATA[<p>Developer Utilities for macOS<br><img src="/2021/01/30/post4/2022-05-23-13-10-53.png"><br>Format/Validate JSON, encode/decode Base64, convert timestamps, debug JWT… with just one click! Native macOS app, works offline, and open source.<br>这是一款付费开源的软件，他提供的编译版是收费的，自己编译就免费了。<br>于是自己编译吧。<br>附上地址:<a href="https://github.com/DevUtilsApp/DevUtils-app">https://github.com/DevUtilsApp/DevUtils-app</a><br>开发环境:<br>This source code is a delayed version of DevUtils.</p><h3 id="Development-environment"><a href="#Development-environment" class="headerlink" title="Development environment"></a>Development environment</h3><ul><li>Swift 5.1+</li><li>Xcode 11.1+</li><li>Swift Package Manager</li><li>Carthage</li></ul><h3 id="编译说明"><a href="#编译说明" class="headerlink" title="编译说明"></a>编译说明</h3><ul><li><p>克隆仓库到本地。</p></li><li><p>Bootstrap carthage, 这个是安装所需要的依赖:</p></li></ul><p><code>carthage bootstrap --platform macOS（不安装会报依赖找不到）</code></p><ul><li>在Xcode中将签名团队更新为您的个人或组织团队。 这是在本地构建应用程序所必需的。 如果您在代码签名方面遇到问题，还请查看以下文章以查看是否有帮助：<ul><li><a href="https://developer.apple.com/support/code-signing/">https://developer.apple.com/support/code-signing/</a></li><li><a href="https://help.apple.com/xcode/mac/current/#/dev60b6fbbc7">https://help.apple.com/xcode/mac/current/#/dev60b6fbbc7</a></li></ul></li><li>在Xcode中跑起来。</li></ul><h3 id="Bootstrap-carthage-安装："><a href="#Bootstrap-carthage-安装：" class="headerlink" title="Bootstrap carthage 安装："></a>Bootstrap carthage 安装：</h3><p>1.brew<br>安装carthage之前需要安装brew，进入官网(<a href="https://brew.sh/index_zh-cn.html">https://brew.sh/index_zh-cn.html</a>) 有详细的安装步骤。<br>获取 Homebrew<br>打开终端Terminal，输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xshell">/usr/bin/ruby -e &quot;$(curl -fsSL &lt;https://raw.githubusercontent.com/Homebrew/install/master/install&gt;)&quot;<br></code></pre></td></tr></table></figure><p>获取最新版本<br><code>brew update</code><br>注意：如果遇到Error: The /usr/local directory is not writable.错误，就执行以下命令<code>sudo chown -R $(whoami):admin /usr/local</code>，再更新。</p><p>2.安装Carthage<br>安装brew之后，就可以安装Carthage了。<br><code>brew install carthage</code><br>安装Carthage之后，查看版本<br><code>carthage version   //目前的版本号为0.15.2</code><br>使用Carthage<br>进入项目所在文件夹<br><code>cd ~/路径/项目文件夹</code><br>创建一个空的carthage文件<br><code>touch Cartfile</code><br>此时项目文件夹中会有一个名字为Carthage的文件<br>使用Xcode打开该文件<br><code>open -a Xcode Cartfile</code><br>编辑Cartfile<br><code>github &quot;SVProgressHUD/SVProgressHUD&quot; ~&gt; 1.0</code><br>Cartfile格式说明<br>依赖源Dependency origin<br>Carthage支持两种类型的源，一个是github，另一个是git。<br>github 表示依赖源，告诉Carthage去哪里下载文件。依赖源之后跟上要下载的库，格式为Username/ProjectName<br>git 关键字后面跟的是资料库的地址，可以是远程的URL地址，使用git://, http://, ssh://，或者是本地资料库地址。<br>依赖版本号 Dependency Version<br>告诉Carthage使用哪个版本，这是可选的，不写默认使用最新版本</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">== 1.0 表示使用1.0版本</span><br>&gt;= 1.0 表示使用1.0或更高的版本<br>~&gt; 1.0 表示使用版本1.0以上但是低于2.0的最新版本，如1.2，1.6<br></code></pre></td></tr></table></figure><p>branch名称 / tag名称 / commit名称，意思是使用特定的分支/标签/提交，比如可以是分支名master，也可以是提交5c8a74a。<br>运行命令<br><code>carthage bootstrap --platform macOS</code><br>报了一个使用Carthage 错误 error: unable to find utility “xcodebuild”, not a developer tool or in PATH<br>google 了一下发现要:<br><img src="/2021/01/30/post4/2022-05-23-21-10-05.png"><br>打开xcode 运行发现：<br><img src="/2021/01/30/post4/2022-05-23-21-12-42.png"><br>报错了，好像是没有这个包，可能是我💻是m1 芯片的原因，于是我修改成Rosetta运行：<br><img src="/2021/01/30/post4/2022-05-23-21-13-04.png"><br>成功了。将app拖到Application就好了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于服务器上logback中文日志乱码？？？</title>
    <link href="/2020/07/23/post3/"/>
    <url>/2020/07/23/post3/</url>
    
    <content type="html"><![CDATA[<p>本地运行logback 输出日志不会乱码 服务器上中文就全变？？？？了<br><img src="/2020/07/23/post3/2022-05-23-13-06-21.png"></p>]]></content>
    
    
    <categories>
      
      <category>路漫漫其修远兮</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mac恢复模式u盘拷文件到系统磁盘</title>
    <link href="/2019/10/18/post2/"/>
    <url>/2019/10/18/post2/</url>
    
    <content type="html"><![CDATA[<p>之前写的那篇clean my mac 卸载 teamviewer 导致系统不能开机了 。那么怎么将文件传进去呢？方法很多两台mac连着 然后传文件 因为这个线一般人都没有，所有pass 。<br>1、我是使用丢在服务器上，然后联网下载。注意文件的权限，http访问不到那个资源，curl会把403页面下下来了，改成了tar后缀。<br>2、网上的方法是使用 U 盘拷的，比如说需要的文件夹 TeamViewerAuthPlugin.bundle 就在 /Volumes/u盘名字/ 里面，我要拷到 /Volumes/Macintosh HD/Library/Security/SecurityAgentPlugins/ 路径下。如果提示 Macintosh HD 是 read-only，那就拷到 /Volumes/Macintosh HD - Data/Library/Security/SecurityAgentPlugins/ 路径下，没有文件夹的话就创建文件夹，这个路径是不用 sudo的。</p>]]></content>
    
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>注意使用cmm卸载TeamViewer</title>
    <link href="/2019/10/15/post1/"/>
    <url>/2019/10/15/post1/</url>
    
    <content type="html"><![CDATA[<p>升级到 最新系统Catalina 后，卸载了TeamViewer ，重启电脑后，就开机不了了，恢复模式也不行。<br><img src="/2019/10/15/post1/2022-05-23-12-45-25.png"><br>升级到 最新系统Catalina 后，爆出tv有问题，就想卸了tv。用 cmm 卸载之后，由于要重启电脑，于是就近重启。结果重启后蹦出一个错误提示框<br>连登陆界面都不显示了，进安全模式也没有用，总之就是没法正常开机。后来进恢复模式，从朋友的 mac 上拷贝来 /Library/Security/SecurityAgentPlugins/TeamViewerAuthPlugin.bundle 才能够正常启动。</p>]]></content>
    
    
    
    <tags>
      
      <tag>mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
